{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","type","onClick","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","Notification","message","notesToShow","filter","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","onChange","target","value","map","key","oneNote","find","changedNote","catch","error","setTimeout","toggleImportanceOf","ReactDom","render","document","getElementById"],"mappings":"kNAQeA,EANF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OAAQ,wBAAIC,UAAU,QAAQJ,EAAKK,QACzB,4BAAQC,KAAK,SAASC,QAASN,GAAmBC,K,gBCyB/C,EA1BA,WACb,OAAOM,IAAMC,IAJC,aAKbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAwBd,EAVA,SAACC,GACd,OAAOL,IAAMM,KApBC,YAoBaD,GAC1BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQd,EALA,SAACG,EAAIF,GAClB,OAAOL,IAAMQ,IAAN,UAzBO,YAyBP,YAAwBD,GAAMF,GACpCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCVdK,EAfA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAW,KAKT,6BACA,oDC+ESC,EAtFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,IAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACC1B,MAAK,SAAA2B,GACJX,EAASW,QAEV,IAEH,IAkBMC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAGP,yBAAKnC,UAAU,SACZmC,IAKDC,EAAcX,EAAUJ,EAAQA,EAAMgB,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAqBhE,OACE,6BACE,qCACA,kBAACmC,EAAD,CAAcC,QAASR,IACvB,4BAAQxB,QAAS,kBAAMuB,GAAYD,KAAnC,QACUA,EAAU,YAAc,OAElC,0BAAMa,SAzDM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjBxC,QAASsB,EACTmB,MAAM,IAAIC,MAAOC,cACjB7C,UAAW8C,KAAKC,SAAW,IAE7Bd,EAAmBS,GAClBnC,MAAK,SAAAyC,GACJzB,EAASD,EAAM2B,OAAOD,IACtBvB,EAAW,SAgDT,2BACEyB,SA7CiB,SAACV,GACxBf,EAAWe,EAAEW,OAAOC,QA6CdA,MAAO5B,IAET,4BAAQrB,KAAK,UAAb,QACA,4BACCkC,EAAYgB,KAAI,SAAAxD,GAAI,OAAI,kBAAC,EAAD,CAAMyD,IAAKzD,EAAKe,GAAIf,KAAMA,EAAMC,iBAAkB,kBAjCtD,SAACc,GAC1B,IAAM2C,EAAUjC,EAAMkC,MAAK,SAAA3D,GAAI,OAAIA,EAAKe,KAAOA,KACzC6C,EAAW,2BAAOF,GAAP,IAAgBvD,WAAYuD,EAAQvD,YAErDiC,EAAmBrB,EAAI6C,GACtBlD,MAAK,SAAAyC,GACJzB,EAASD,EAAM+B,KAAI,SAAAxD,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOmD,SAEpDU,OAAM,SAAAC,GACL9B,EAAgB,aAAD,OACA4B,EAAYvD,QADZ,sCAGf0D,YAAW,WACT/B,EAAgB,QACf,KACHN,EAASD,EAAMgB,QAAO,SAAAzC,GAAI,OAAIA,EAAKe,KAAOA,SAkByCiD,CAAmBhE,EAAKe,YAG3G,kBAAC,EAAD,Q,MCjFNkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e968aa3f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n  return (<li className='note'>{note.content} \r\n            <button type=\"button\" onClick={toggleImportance}>{label}</button>\r\n          </li>) \r\n}\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = 'api/notes'\r\n// const baseUrl = 'https://damp-badlands-02149.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n  .then(response => response.data);\r\n}\r\n\r\n// const getAll = () => {\r\n//   const request = axios.get(baseUrl)\r\n//   const nonExisting = {\r\n//     id: 10000,\r\n//     content: 'This note is not saved to server',\r\n//     date: '2019-05-30T17:30:31.098Z',\r\n//     important: true,\r\n//   }\r\n//   return request.then(response => response.data.concat(nonExisting))\r\n// }\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n  .then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n  .then(response => response.data);\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update\r\n}","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize : 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle} >\r\n      <br />\r\n      <em>note slium apsis..</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n\r\n ","import React, {useEffect, useState} from 'react';\r\nimport Note from './components/Note';\r\nimport noteService from './services/notes';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    console.log('effect');\r\n    noteService.getAll()\r\n    .then(initialNotes => {\r\n      setNotes(initialNotes);\r\n    })\r\n  }, []);\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    const noteObject = {\r\n      content: newNote, \r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n    noteService.create(noteObject)\r\n    .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote('');\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value);\r\n  }\r\n\r\n  const Notification = ({message}) => {\r\n    if (message === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const oneNote = notes.find(note => note.id === id);\r\n    const changedNote = {...oneNote, important: !oneNote.important};\r\n\r\n    noteService.update(id, changedNote)\r\n    .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `the note '${changedNote.content}' was already deleted from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000);\r\n      setNotes(notes.filter(note => note.id !== id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n      </button>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          onChange={handleNoteChange} \r\n          value={newNote}\r\n        />\r\n        <button type=\"submit\">Save</button>\r\n        <ul>\r\n        {notesToShow.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>)}\r\n       </ul>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDom.render(<App />, document.getElementById('root')) \r\n\r\n"],"sourceRoot":""}